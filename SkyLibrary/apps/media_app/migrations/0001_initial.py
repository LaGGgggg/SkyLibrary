# Generated by Django 4.2.1 on 2023-07-15 10:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import media_app.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=500, verbose_name='content')),
                ('target_type', models.PositiveSmallIntegerField(choices=[(1, 'Media type'), (2, 'Comment type')], verbose_name='target type')),
                ('target_id', models.PositiveIntegerField(verbose_name='target id')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='publication date')),
                ('user_who_added', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment', to=settings.AUTH_USER_MODEL, verbose_name='user who added')),
            ],
            options={
                'verbose_name': 'comment',
                'verbose_name_plural': 'comments',
                'permissions': [('change_comment_content_field_to_banned', 'Can change the content of the comment to "This comment was banned"')],
            },
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=60, unique=True, verbose_name='title')),
                ('description', models.TextField(unique=True, verbose_name='description')),
                ('author', models.CharField(max_length=30, verbose_name='author')),
                ('pub_date', models.DateField(auto_now_add=True, verbose_name='publication date')),
                ('active', models.PositiveSmallIntegerField(choices=[(0, 'Inactive'), (1, 'Active'), (2, 'Not valid')], default=0, verbose_name='active')),
                ('file', models.FileField(upload_to=media_app.models.get_upload, verbose_name='file')),
                ('cover', models.ImageField(blank=True, null=True, upload_to=media_app.models.get_upload, verbose_name='cover')),
            ],
            options={
                'verbose_name': 'media',
                'verbose_name_plural': 'medias',
                'permissions': [('change_media_active_field', 'Can change the value of the media active field')],
            },
        ),
        migrations.CreateModel(
            name='ReportType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_en_us', models.CharField(max_length=60, unique=True, verbose_name='name en-us')),
                ('name_ru', models.CharField(max_length=60, unique=True, verbose_name='name ru')),
                ('pub_date', models.DateField(auto_now_add=True, verbose_name='publication date')),
                ('user_who_added', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report_type', to=settings.AUTH_USER_MODEL, verbose_name='user who addded')),
            ],
            options={
                'verbose_name': 'report type',
                'verbose_name_plural': 'report types',
                'db_table': 'media_app_report_type',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=300, verbose_name='content')),
                ('target_type', models.PositiveSmallIntegerField(choices=[(1, 'Media type'), (2, 'Comment type')], verbose_name='target type')),
                ('target_id', models.PositiveIntegerField(verbose_name='target id')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='publication date')),
                ('report_type', models.ManyToManyField(related_name='report_type_report', to='media_app.reporttype', verbose_name='report type')),
                ('user_who_added', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_who_added_report', to=settings.AUTH_USER_MODEL, verbose_name='user who added')),
            ],
            options={
                'verbose_name': 'report',
                'verbose_name_plural': 'reports',
            },
        ),
        migrations.CreateModel(
            name='MediaTags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_en_us', models.CharField(max_length=16, unique=True, verbose_name='name en-us')),
                ('help_text_en_us', models.CharField(max_length=80, unique=True, verbose_name='help text en-us')),
                ('name_ru', models.CharField(max_length=16, unique=True, verbose_name='name ru')),
                ('help_text_ru', models.CharField(max_length=80, unique=True, verbose_name='help text ru')),
                ('pub_date', models.DateField(auto_now_add=True, verbose_name='publication date')),
                ('user_who_added', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media_tags', to=settings.AUTH_USER_MODEL, verbose_name='user who added')),
            ],
            options={
                'verbose_name': 'media tag',
                'verbose_name_plural': 'media tags',
                'db_table': 'media_app_media_tag',
            },
        ),
        migrations.CreateModel(
            name='MediaDownload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pub_date', models.DateField(auto_now_add=True, verbose_name='publication date')),
                ('download', models.SmallIntegerField(choices=[(0, 'Not downloaded'), (1, 'Downloaded')], default=1, verbose_name='download')),
                ('media', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media_media_download', to='media_app.media', verbose_name='media')),
                ('user_who_added', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_who_added_media_download', to=settings.AUTH_USER_MODEL, verbose_name='user who added')),
            ],
            options={
                'verbose_name': 'media download',
                'verbose_name_plural': 'media downloads',
                'db_table': 'media_app_media_download',
            },
        ),
        migrations.AddField(
            model_name='media',
            name='tags',
            field=models.ManyToManyField(related_name='tags_media', to='media_app.mediatags', verbose_name='tags'),
        ),
        migrations.AddField(
            model_name='media',
            name='user_who_added',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_who_added_media', to=settings.AUTH_USER_MODEL, verbose_name='user who added'),
        ),
        migrations.CreateModel(
            name='CommentRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.SmallIntegerField(choices=[(1, 'Up vote'), (-1, 'Down vote')], verbose_name='rating')),
                ('pub_date', models.DateField(auto_now_add=True, verbose_name='publication date')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_comment_rating', to='media_app.comment', verbose_name='comment')),
                ('user_who_added', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_who_added_comment_rating', to=settings.AUTH_USER_MODEL, verbose_name='user who added')),
            ],
            options={
                'verbose_name': 'comment rating',
                'verbose_name_plural': 'comment ratings',
                'db_table': 'media_app_comment_rating',
            },
        ),
        migrations.CreateModel(
            name='MediaRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pub_date', models.DateField(auto_now_add=True, verbose_name='publication date')),
                ('rating', models.SmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], verbose_name='rating')),
                ('media', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media_media_rating', to='media_app.media', verbose_name='media')),
                ('user_who_added', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_who_added_media_rating', to=settings.AUTH_USER_MODEL, verbose_name='user who added')),
            ],
            options={
                'verbose_name': 'media rating',
                'verbose_name_plural': 'media ratings',
                'db_table': 'media_app_media_rating',
                'unique_together': {('media', 'user_who_added')},
            },
        ),
    ]
